'use client'
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/switch.web.tsx
var switch_web_exports = {};
__export(switch_web_exports, {
  Root: () => Root2,
  Thumb: () => Thumb2
});
module.exports = __toCommonJS(switch_web_exports);
var Switch = __toESM(require("@radix-ui/react-switch"));
var Slot = __toESM(require("@rn-primitives/slot"));
var React = __toESM(require("react"));
var import_react_native = require("react-native");
var Root2 = React.forwardRef(
  ({
    asChild,
    checked,
    onCheckedChange,
    disabled,
    onPress: onPressProp,
    onKeyDown: onKeyDownProp,
    ...props
  }, ref) => {
    function onPress(ev) {
      onCheckedChange(!checked);
      onPressProp?.(ev);
    }
    function onKeyDown(ev) {
      onKeyDownProp?.(ev);
      if (ev.key === " ") {
        onCheckedChange(!checked);
      }
    }
    const Component = asChild ? Slot.Pressable : import_react_native.Pressable;
    return <Switch.Root checked={checked} onCheckedChange={onCheckedChange} disabled={disabled} asChild>
        <Component
      ref={ref}
      disabled={disabled}
      onPress={onPress}
      onKeyDown={onKeyDown}
      {...props}
    />
      </Switch.Root>;
  }
);
Root2.displayName = "RootWebSwitch";
var Thumb2 = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Switch.Thumb asChild>
      <Component ref={ref} {...props} />
    </Switch.Thumb>;
});
Thumb2.displayName = "ThumbWebSwitch";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Root,
  Thumb
});
